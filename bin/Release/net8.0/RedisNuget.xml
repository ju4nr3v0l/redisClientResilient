<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RedisNuget</name>
    </assembly>
    <members>
        <member name="P:Azure.Redis.Resilient.Client.Configuration.FallbackServiceOptions.BaseUrl">
            <summary>
            URL base del servicio de fallback
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Configuration.FallbackServiceOptions.TimeoutSeconds">
            <summary>
            Timeout para llamadas HTTP en segundos
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Configuration.FallbackServiceOptions.MaxRetryAttempts">
            <summary>
            Número máximo de reintentos para el servicio de fallback
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Configuration.FallbackServiceOptions.Headers">
            <summary>
            Headers adicionales para las peticiones HTTP
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Configuration.RedisOptions.ConnectionString">
            <summary>
            Connection string para Redis (puede incluir Managed Identity)
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Configuration.RedisOptions.HostName">
            <summary>
            Nombre del host de Redis
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Configuration.RedisOptions.Port">
            <summary>
            Puerto de Redis
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Configuration.RedisOptions.UseSsl">
            <summary>
            Usar SSL
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Configuration.RedisOptions.UseManagedIdentity">
            <summary>
            Usar Managed Identity para autenticación
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Configuration.RedisOptions.DefaultExpirationMinutes">
            <summary>
            Tiempo de expiración por defecto en minutos
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Configuration.RedisOptions.KeyPrefix">
            <summary>
            Prefijo para las claves de Redis
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Configuration.RedisOptions.MaxRetryAttempts">
            <summary>
            Número máximo de reintentos
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Configuration.RedisOptions.RetryDelaySeconds">
            <summary>
            Tiempo de espera base para reintentos en segundos
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Configuration.ServiceBusOptions.ConnectionString">
            <summary>
            Connection string de Service Bus
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Configuration.ServiceBusOptions.Namespace">
            <summary>
            Namespace de Service Bus
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Configuration.ServiceBusOptions.RedisEventsTopic">
            <summary>
            Nombre del tópico para eventos de Redis
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Configuration.ServiceBusOptions.UseManagedIdentity">
            <summary>
            Usar Managed Identity para Service Bus
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Configuration.ServiceBusOptions.EnableEventPublishing">
            <summary>
            Habilitar publicación de eventos
            </summary>
        </member>
        <member name="M:Azure.Redis.Resilient.Client.Extensions.ServiceCollectionExtensions.AddResilientRedis(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Registra el cliente resiliente de Redis con todas sus dependencias
            </summary>
        </member>
        <member name="M:Azure.Redis.Resilient.Client.Extensions.ServiceCollectionExtensions.AddResilientRedis(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Azure.Redis.Resilient.Client.Configuration.RedisOptions},System.Action{Azure.Redis.Resilient.Client.Configuration.ServiceBusOptions},System.Action{Azure.Redis.Resilient.Client.Configuration.FallbackServiceOptions})">
            <summary>
            Registra el cliente resiliente de Redis con configuración personalizada
            </summary>
        </member>
        <member name="M:Azure.Redis.Resilient.Client.Interfaces.IEventPublisher.PublishAsync(Azure.Redis.Resilient.Client.Models.RedisEvent,System.Threading.CancellationToken)">
            <summary>
            Publica un evento de Redis en Service Bus
            </summary>
        </member>
        <member name="M:Azure.Redis.Resilient.Client.Interfaces.IEventPublisher.PublishBatchAsync(System.Collections.Generic.IEnumerable{Azure.Redis.Resilient.Client.Models.RedisEvent},System.Threading.CancellationToken)">
            <summary>
            Publica múltiples eventos en batch
            </summary>
        </member>
        <member name="M:Azure.Redis.Resilient.Client.Interfaces.IFallbackService.GetDataAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Obtiene datos del servicio de fallback
            </summary>
        </member>
        <member name="M:Azure.Redis.Resilient.Client.Interfaces.IFallbackService.CreateDataAsync``1(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Crea datos en el servicio de fallback
            </summary>
        </member>
        <member name="T:Azure.Redis.Resilient.Client.Interfaces.IResilientRedisClient">
            <summary>
            Provides a resilient Redis client with automatic retry, fallback, and event publishing capabilities.
            </summary>
        </member>
        <member name="M:Azure.Redis.Resilient.Client.Interfaces.IResilientRedisClient.GetAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Obtiene un valor del cache con resiliencia
            </summary>
            <typeparam name="T">Tipo del objeto a obtener</typeparam>
            <param name="key">Clave del cache</param>
            <param name="cancellationToken">Token de cancelación</param>
            <returns>Resultado del cache con metadata</returns>
        </member>
        <member name="M:Azure.Redis.Resilient.Client.Interfaces.IResilientRedisClient.GetStringAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Obtiene un valor del cache como string
            </summary>
            <param name="key">Clave del cache</param>
            <param name="cancellationToken">Token de cancelación</param>
            <returns>Resultado del cache con el valor como string</returns>
        </member>
        <member name="M:Azure.Redis.Resilient.Client.Interfaces.IResilientRedisClient.SetAsync``1(System.String,``0,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Establece un valor en el cache
            </summary>
            <typeparam name="T">Tipo del objeto a guardar</typeparam>
            <param name="key">Clave del cache</param>
            <param name="value">Valor a guardar</param>
            <param name="expiration">Tiempo de expiración opcional</param>
            <param name="cancellationToken">Token de cancelación</param>
            <returns>Resultado de la operación</returns>
        </member>
        <member name="M:Azure.Redis.Resilient.Client.Interfaces.IResilientRedisClient.SetStringAsync(System.String,System.String,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Establece un valor string en el cache
            </summary>
            <param name="key">Clave del cache</param>
            <param name="value">Valor string a guardar</param>
            <param name="expiration">Tiempo de expiración opcional</param>
            <param name="cancellationToken">Token de cancelación</param>
            <returns>Resultado de la operación</returns>
        </member>
        <member name="M:Azure.Redis.Resilient.Client.Interfaces.IResilientRedisClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Elimina una clave del cache
            </summary>
            <param name="key">Clave a eliminar</param>
            <param name="cancellationToken">Token de cancelación</param>
            <returns>Resultado de la operación</returns>
        </member>
        <member name="M:Azure.Redis.Resilient.Client.Interfaces.IResilientRedisClient.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Verifica si existe una clave en el cache
            </summary>
            <param name="key">Clave a verificar</param>
            <param name="cancellationToken">Token de cancelación</param>
            <returns>Resultado indicando si la clave existe</returns>
        </member>
        <member name="M:Azure.Redis.Resilient.Client.Interfaces.IResilientRedisClient.GetOrCreateAsync``1(System.String,System.Func{System.Threading.Tasks.Task{``0}},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Obtiene o crea un valor usando el servicio de fallback
            </summary>
            <typeparam name="T">Tipo del objeto</typeparam>
            <param name="key">Clave del cache</param>
            <param name="fallbackFactory">Función para crear el valor si no existe en cache</param>
            <param name="expiration">Tiempo de expiración opcional</param>
            <param name="cancellationToken">Token de cancelación</param>
            <returns>Resultado con el valor obtenido del cache o del fallback</returns>
        </member>
        <member name="M:Azure.Redis.Resilient.Client.Interfaces.IResilientRedisClient.InvalidatePatternAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Invalida múltiples claves por patrón
            </summary>
            <param name="pattern">Patrón de claves a invalidar</param>
            <param name="cancellationToken">Token de cancelación</param>
            <returns>Número de claves eliminadas</returns>
        </member>
        <member name="T:Azure.Redis.Resilient.Client.Models.CacheResult`1">
            <summary>
            Represents the result of a cache operation with metadata about the execution.
            </summary>
            <typeparam name="T">The type of the cached value</typeparam>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Models.CacheResult`1.Value">
            <summary>
            Gets or sets the cached value.
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Models.CacheResult`1.Success">
            <summary>
            Gets or sets a value indicating whether the operation was successful.
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Models.CacheResult`1.FromCache">
            <summary>
            Gets or sets a value indicating whether the value was retrieved from cache.
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Models.CacheResult`1.FromFallback">
            <summary>
            Gets or sets a value indicating whether the value was retrieved from the fallback service.
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Models.CacheResult`1.ErrorMessage">
            <summary>
            Gets or sets the error message if the operation failed.
            </summary>
        </member>
        <member name="P:Azure.Redis.Resilient.Client.Models.CacheResult`1.ExecutionTime">
            <summary>
            Gets or sets the execution time of the operation.
            </summary>
        </member>
        <member name="M:Azure.Redis.Resilient.Client.Models.CacheResult`1.SuccessFromCache(`0,System.TimeSpan)">
            <summary>
            Creates a successful result from cache.
            </summary>
            <param name="value">The cached value</param>
            <param name="executionTime">The execution time</param>
            <returns>A successful cache result</returns>
        </member>
        <member name="M:Azure.Redis.Resilient.Client.Models.CacheResult`1.SuccessFromFallback(`0,System.TimeSpan)">
            <summary>
            Creates a successful result from fallback service.
            </summary>
            <param name="value">The fallback value</param>
            <param name="executionTime">The execution time</param>
            <returns>A successful fallback result</returns>
        </member>
        <member name="M:Azure.Redis.Resilient.Client.Models.CacheResult`1.Failure(System.String,System.TimeSpan)">
            <summary>
            Creates a failed result.
            </summary>
            <param name="errorMessage">The error message</param>
            <param name="executionTime">The execution time</param>
            <returns>A failed result</returns>
        </member>
    </members>
</doc>
